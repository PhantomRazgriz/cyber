/* ==========================================================================
   PROTOCOL STEPS - ENHANCED LOCK & UNLOCK SYSTEM
   Visual feedback for step progression and validation
   ========================================================================== */

/* ==================== LOCKED STEP - ENHANCED ==================== */

.protocol-step.locked {
    opacity: 0.4;
    filter: grayscale(70%) blur(1px);
    cursor: not-allowed;
    pointer-events: none;
    position: relative;
}

.protocol-step.locked .step-content {
    filter: blur(2px);
}

.protocol-step.locked .step-number {
    border-color: var(--border-dim);
    color: var(--text-dim);
}

/* Enhanced lock badge */
.protocol-step.locked::after {
    content: 'ðŸ”’ LOCKED';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 8px 16px;
    background-color: rgba(0, 0, 0, 0.9);
    border: 2px solid var(--border-light);
    color: var(--text-dim);
    font-family: var(--font-mono);
    font-size: var(--text-sm);
    font-weight: var(--font-bold);
    text-transform: uppercase;
    letter-spacing: var(--tracking-wider);
    z-index: 10;
    animation: lockPulse 2s infinite;
}

@keyframes lockPulse {
    0%, 100% { 
        opacity: 0.8;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
    }
    50% { 
        opacity: 1;
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.2);
    }
}

/* ==================== UNLOCKING ANIMATION ==================== */

.protocol-step.unlocking {
    animation: unlockSequence 1s ease-out;
}

@keyframes unlockSequence {
    0% {
        opacity: 0.4;
        filter: grayscale(70%) blur(1px);
        transform: scale(0.95);
    }
    25% {
        filter: grayscale(50%);
    }
    50% {
        opacity: 0.7;
        filter: grayscale(30%);
        transform: scale(1.05);
        box-shadow: 0 0 30px rgba(255, 26, 62, 0.5);
    }
    75% {
        filter: grayscale(10%);
    }
    100% {
        opacity: 1;
        filter: grayscale(0%) blur(0px);
        transform: scale(1);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    }
}

/* Unlock glitch effect */
.protocol-step.unlocking .step-number {
    animation: unlockGlitch 0.6s;
}

@keyframes unlockGlitch {
    0%, 100% {
        transform: translate(0, 0);
        filter: none;
    }
    20% {
        transform: translate(-2px, 2px);
        filter: hue-rotate(90deg);
    }
    40% {
        transform: translate(2px, -2px);
        filter: hue-rotate(180deg);
    }
    60% {
        transform: translate(-2px, -2px);
        filter: hue-rotate(270deg);
    }
    80% {
        transform: translate(2px, 2px);
        filter: hue-rotate(360deg);
    }
}

/* ==================== ACTIVE STEP - ENHANCED ==================== */

.protocol-step.active {
    border-color: var(--neon-red);
    background-color: var(--bg-window);
    box-shadow: 
        0 0 20px rgba(255, 26, 62, 0.3),
        0 4px 15px rgba(0, 0, 0, 0.4);
    animation: activeGlow 3s infinite ease-in-out;
}

@keyframes activeGlow {
    0%, 100% {
        box-shadow: 
            0 0 20px rgba(255, 26, 62, 0.3),
            0 4px 15px rgba(0, 0, 0, 0.4);
    }
    50% {
        box-shadow: 
            0 0 30px rgba(255, 26, 62, 0.5),
            0 4px 20px rgba(0, 0, 0, 0.5);
    }
}

.protocol-step.active .step-number {
    border-color: var(--neon-red);
    color: var(--neon-red);
    background-color: rgba(255, 26, 62, 0.1);
    box-shadow: 0 0 20px var(--neon-red-glow);
    animation: activeNumberPulse 2s infinite ease-in-out;
}

@keyframes activeNumberPulse {
    0%, 100% {
        transform: scale(1);
        box-shadow: 0 0 20px rgba(255, 26, 62, 0.5);
    }
    50% {
        transform: scale(1.05);
        box-shadow: 0 0 30px rgba(255, 26, 62, 0.7);
    }
}

.protocol-step.active .step-number::after {
    border-color: var(--neon-red);
    animation: ringPulse 2s infinite;
}

@keyframes ringPulse {
    0%, 100% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.3);
        opacity: 0;
    }
}

/* Enhanced active badge */
.protocol-step.active::after {
    content: 'âš¡ IN PROGRESS';
    position: absolute;
    top: var(--space-sm);
    right: var(--space-sm);
    padding: 4px 10px;
    background-color: var(--neon-red);
    color: var(--bg-darkest);
    font-family: var(--font-mono);
    font-size: var(--text-xs);
    font-weight: var(--font-bold);
    text-transform: uppercase;
    letter-spacing: var(--tracking-wide);
    box-shadow: 0 0 10px rgba(255, 26, 62, 0.5);
    animation: badgePulse 1.5s infinite;
}

@keyframes badgePulse {
    0%, 100% { 
        opacity: 1;
        transform: scale(1);
    }
    50% { 
        opacity: 0.8;
        transform: scale(1.05);
    }
}

/* ==================== COMPLETED STEP - ENHANCED ==================== */

.protocol-step.completed {
    border-color: var(--success);
    opacity: 0.85;
    position: relative;
}

.protocol-step.completed::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
        135deg,
        rgba(102, 255, 102, 0.05) 0%,
        transparent 50%
    );
    pointer-events: none;
}

.protocol-step.completed .step-number {
    border-color: var(--success);
    color: var(--success);
    background-color: rgba(102, 255, 102, 0.1);
    box-shadow: 0 0 15px rgba(102, 255, 102, 0.3);
}

.protocol-step.completed .step-number::before {
    content: 'âœ“';
    position: absolute;
    font-size: var(--text-3xl);
    animation: checkmarkAppear 0.5s ease-out;
}

@keyframes checkmarkAppear {
    0% {
        opacity: 0;
        transform: scale(0) rotate(-45deg);
    }
    50% {
        transform: scale(1.2) rotate(5deg);
    }
    100% {
        opacity: 1;
        transform: scale(1) rotate(0deg);
    }
}

/* Enhanced completed badge */
.protocol-step.completed::after {
    content: 'âœ“ COMPLETED';
    position: absolute;
    top: var(--space-sm);
    right: var(--space-sm);
    padding: 4px 10px;
    background-color: var(--success);
    color: var(--bg-darkest);
    font-family: var(--font-mono);
    font-size: var(--text-xs);
    font-weight: var(--font-bold);
    text-transform: uppercase;
    letter-spacing: var(--tracking-wide);
    box-shadow: 0 0 10px rgba(102, 255, 102, 0.3);
}

/* ==================== INCOMPLETE ATTEMPT - NEW ==================== */

.protocol-step.incomplete-attempt {
    animation: incompleteDenied 0.5s ease-out;
}

@keyframes incompleteDenied {
    0%, 100% {
        transform: translateX(0);
        border-color: var(--neon-red);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-8px);
        border-color: var(--error);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(8px);
        border-color: var(--error);
    }
}

/* Warning overlay for incomplete */
.protocol-step.incomplete-attempt::before {
    content: 'âš  INCOMPLETE';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 10px 20px;
    background-color: rgba(255, 26, 62, 0.95);
    border: 2px solid var(--error);
    color: var(--text-primary);
    font-family: var(--font-mono);
    font-size: var(--text-sm);
    font-weight: var(--font-bold);
    text-transform: uppercase;
    letter-spacing: var(--tracking-wider);
    z-index: 100;
    animation: warningFlash 0.5s ease-out;
    box-shadow: 0 0 30px rgba(255, 26, 62, 0.7);
}

@keyframes warningFlash {
    0%, 100% { opacity: 0; }
    20%, 80% { opacity: 1; }
}

/* ==================== STEP BLOCKING OVERLAY ==================== */

.protocol-step.blocked {
    position: relative;
}

.protocol-step.blocked::before {
    content: 'âš  COMPLETE PREVIOUS STEPS';
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.85);
    backdrop-filter: blur(4px);
    color: var(--error);
    font-family: var(--font-mono);
    font-size: var(--text-sm);
    font-weight: var(--font-bold);
    text-transform: uppercase;
    text-align: center;
    padding: var(--space-md);
    z-index: 50;
    animation: blockPulse 2s infinite;
}

@keyframes blockPulse {
    0%, 100% {
        opacity: 0.9;
    }
    50% {
        opacity: 1;
        text-shadow: 0 0 10px var(--error);
    }
}

/* ==================== PROGRESS BAR - ENHANCED ==================== */

.protocol-progress {
    position: relative;
    overflow: visible;
}

.progress-fill {
    height: 100%;
    background: linear-gradient(90deg, 
        var(--error) 0%, 
        var(--warning) 33%,
        var(--neon-blue) 66%, 
        var(--success) 100%);
    transition: width 1s ease-out;
    position: relative;
    box-shadow: 0 0 10px rgba(255, 26, 62, 0.5);
}

.progress-fill::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 40px;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent,
        rgba(255, 255, 255, 0.6));
    animation: progressShimmer 1.5s infinite;
}

@keyframes progressShimmer {
    0% { 
        transform: translateX(-40px);
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% { 
        transform: translateX(40px);
        opacity: 0;
    }
}

/* Progress milestone effects */
.protocol-progress.milestone-25 {
    animation: milestonePulse 0.5s ease-out;
}

.protocol-progress.milestone-50 {
    animation: milestonePulse 0.5s ease-out;
}

.protocol-progress.milestone-75 {
    animation: milestonePulse 0.5s ease-out;
}

.protocol-progress.milestone-100 {
    animation: completionCelebration 1s ease-out;
}

@keyframes milestonePulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.02);
        box-shadow: 0 0 20px rgba(0, 204, 255, 0.5);
    }
}

@keyframes completionCelebration {
    0% {
        transform: scale(1);
    }
    25% {
        transform: scale(1.05);
        box-shadow: 0 0 30px rgba(102, 255, 102, 0.7);
    }
    50% {
        transform: scale(0.98);
    }
    75% {
        transform: scale(1.02);
    }
    100% {
        transform: scale(1);
        box-shadow: 0 0 20px rgba(102, 255, 102, 0.5);
    }
}

/* ==================== HOVER STATES - CONTEXT AWARE ==================== */

.protocol-step.locked:hover {
    transform: none;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

.protocol-step:not(.locked):not(.completed):hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5);
}

.protocol-step.active:hover {
    box-shadow: 
        0 0 30px rgba(255, 26, 62, 0.5),
        0 8px 25px rgba(0, 0, 0, 0.5);
}